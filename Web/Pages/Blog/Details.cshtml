@page "/blog/{urlHandle}"
@model Web.Pages.Blog.DetailsModel

@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _userManager;
@inject SignInManager<IdentityUser> _signInManager;

@{
    ViewData["Title"] = Model.BlogPost.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8">
            <partial name="_Alert" />

            @if (Model.BlogPost != null)
            {
                <h1 class="mb-3">@Model.BlogPost.Heading</h1>

                <div class="d-flex justify-content-between">
                    <span class="text-secondary">@Model.BlogPost.Author</span>
                    <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    <span>
                        @if (_signInManager.IsSignedIn(User))
                        {
                            if (Model.Liked)
                            {
                                <a style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id="btnLike" style="cursor: pointer">
                                    <i class="bi bi-hand-thumbs-up"></i>
                                </a>
                            }
                        }
                        <span id="totalLikes">@Model.LikesCount</span> likes
                    </span>
                </div>

                <div class="mb-3">
                    @if (Model.BlogPost.Tags != null && Model.BlogPost.Tags.Any())
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a href="/@tag.Name.ToLower()"><span class="badge bg-dark">@tag.Name</span></a>
                        }
                    }
                </div>

                <img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid md-3" alt="@Model.BlogPost.Heading" />

                <div class="mb-3 blog-details">
                    @Html.Raw(Model.BlogPost.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (_signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label for="comment">Add new comment</label>
                                    <textarea class="form-control" id="comment" asp-for="Comment.Content"></textarea>
                                </div>

                                <div class="mb-3">
                                    <button class="btn btn-primary" type="submit">Add</button>
                                    <input type="hidden" asp-for="BlogPostId" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">

                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLike = document.getElementById('btnLike');
        const totalLikes = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogpost/getlikescount/@Model.BlogPost.Id', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => {
                    totalLikes.innerHTML = result.data;
                });

        }

        async function addLikeForBlog() {
            fetch('/api/blogpost/addlike', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    BlogPostId: '@Model.BlogPost.Id',
                    UserId: '@_userManager.GetUserId(User)'
                })
            })
                .then(() => {
                    btnLike.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                    btnLike.removeEventListener('click', addLikeForBlog);
                    getTotalLikes();
                });
        }

        btnLike.addEventListener('click', addLikeForBlog);
    </script>
}
